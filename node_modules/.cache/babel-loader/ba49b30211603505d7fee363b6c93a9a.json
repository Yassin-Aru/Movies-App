{"ast":null,"code":"var _jsxFileName = \"/home/icarus/Desktop/works/Movies-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchMovies = async title => {\n    const response = await fetch(`/api/?apikey=f26d57b1&s=${title}`);\n    const data = await response.json();\n    console.log(data);\n    setMovies(data.Search);\n  };\n\n  useEffect(() => {\n    searchMovies(\"venom\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MoviesList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type the name of the movie...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No movies found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aQi/tms59DsvcxPuc/aDP6Uhs+E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/icarus/Desktop/works/Movies-App/src/App.js"],"names":["React","useEffect","useState","SearchIcon","MovieCard","App","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","console","log","Search","e","target","value","length","map","movie","imdbID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2BAA0BF,KAAM,EAAlC,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,IAAAA,SAAS,CAACO,IAAI,CAACI,MAAN,CAAT;AACD,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,+BADd;AAEE,QAAA,KAAK,EAAEF,UAFT;AAGE,QAAA,QAAQ,EAAGW,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,GAAG,EAAElB,UADP;AAEE,QAAA,GAAG,EAAC,QAFN;AAGE,QAAA,OAAO,EAAE,MAAMO,YAAY,CAACF,UAAD;AAH7B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAgBG,CAAAF,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEgB,MAAR,IAAiB,CAAjB,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGhB,MAAM,CAACiB,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB,SAA8BA,KAAK,CAACC,MAApC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA7CD;;GAAMpB,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchMovies = async (title) => {\n    const response = await fetch(`/api/?apikey=f26d57b1&s=${title}`);\n    const data = await response.json();\n    console.log(data);\n    setMovies(data.Search);\n  };\n\n  useEffect(() => {\n    searchMovies(\"venom\");\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>MoviesList</h1>\n\n      <div className=\"search\">\n        <input\n          placeholder=\"Type the name of the movie...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <img\n          src={SearchIcon}\n          alt=\"search\"\n          onClick={() => searchMovies(searchTerm)}\n        />\n      </div>\n\n      {movies?.length > 0 ? (\n        <div className=\"container\">\n          {movies.map((movie) => (\n            <MovieCard movie={movie} key={movie.imdbID} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"empty\">\n          <h2>No movies found!</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/icarus/Desktop/works/Book-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\"; // f26d57b1 api key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=f26d57b1\";\nconst movie1 = {\n  \"Title\": \"Venom\",\n  \"Year\": \"2018\",\n  \"imdbID\": \"tt1270797\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNzAwNzUzNjY4MV5BMl5BanBnXkFtZTgwMTQ5MzM0NjM@._V1_SX300.jpg\"\n};\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n\n  useEffect(() => {\n    searchMovies(\"venom\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MoviesList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type name of the movie...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie =>\n      /*#__PURE__*/\n      //map is a method that required a return \n      //{return (<MovieCard movie={movie} />)}\n      _jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No movies found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"aQi/tms59DsvcxPuc/aDP6Uhs+E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/icarus/Desktop/works/Book-App/src/App.js"],"names":["React","useEffect","useState","SearchIcon","MovieCard","API_URL","movie1","App","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","Search","e","target","value","length","map","movie"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;;AAEA,MAAMC,OAAO,GAAG,wCAAhB;AAEA,MAAMC,MAAM,GAAG;AACX,WAAS,OADE;AAEX,UAAQ,MAFG;AAGX,YAAU,WAHC;AAIX,UAAQ,OAJG;AAKX,YAAU;AALC,CAAf;;AAQA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,MAAKQ,KAAM,EAAvB,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAR,IAAAA,SAAS,CAACO,IAAI,CAACE,MAAN,CAAT;AACH,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAQ,QAAA,WAAW,EAAC,2BAApB;AACQ,QAAA,KAAK,EAAEF,UADf;AAEQ,QAAA,QAAQ,EAAGS,CAAD,IAAOR,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAFtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,GAAG,EAAElB,UAAb;AACQ,QAAA,GAAG,EAAC,QADZ;AAEQ,QAAA,OAAO,EAAE,MAAMS,YAAY,CAACF,UAAD;AAFnC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAcQ,CAAAF,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEc,MAAR,IAAiB,CAAjB,gBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKd,MAAM,CAACe,GAAP,CAAYC,KAAD;AAAA;AACR;AACA;AACA,cAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAUI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAhDD;;GAAMjB,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\";\n// f26d57b1 api key\n\nconst API_URL = \"http://www.omdbapi.com?apikey=f26d57b1\";\n\nconst movie1 = {\n    \"Title\": \"Venom\",\n    \"Year\": \"2018\",\n    \"imdbID\": \"tt1270797\",\n    \"Type\": \"movie\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNzAwNzUzNjY4MV5BMl5BanBnXkFtZTgwMTQ5MzM0NjM@._V1_SX300.jpg\"\n  }\n\nconst App = () =>{\n    const [movies, setMovies] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const searchMovies = async (title) => {\n        const response = await fetch(`${API_URL}&s=${title}`);\n        const data = await response.json();\n\n        setMovies(data.Search);\n    }\n\n    useEffect(() =>{\n        searchMovies(\"venom\");\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <h1>MoviesList</h1>\n\n            <div className=\"search\">\n                <input  placeholder=\"Type name of the movie...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <img    src={SearchIcon}\n                        alt=\"search\"\n                        onClick={() => searchMovies(searchTerm)}\n                />\n            </div>\n            {\n                movies?.length > 0\n                ? (\n                    <div className=\"container\">\n                        {movies.map((movie) => (\n                            //map is a method that required a return \n                            //{return (<MovieCard movie={movie} />)}\n                            <MovieCard movie={movie} />\n                        ))}\n                    </div>\n                ) : (\n                    <div className=\"empty\">\n                        <h2>No movies found!</h2>\n                    </div>\n                )\n            }\n\n        </div>\n    )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}